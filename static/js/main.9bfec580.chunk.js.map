{"version":3,"sources":["assets/images/star_white.svg","assets/images/star_white_empty.svg","components/Header.jsx","assets/images/search.svg","api.js","hooks/useSearch.js","components/SearchBlock.jsx","assets/images/star_empty.svg","assets/images/star_full.svg","components/Word.jsx","components/WordsList.jsx","hooks/useStarred.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","ToStarredWords","button","Star","img","Header","setStarMod","starMod","className","onClick","src","star","starEmpty","alt","instance","require","create","baseURL","partsOfSpeach","n","v","adj","adv","oxfordAPI","text","get","res","data","map","item","defs","i","replace","tags","reduce","acc","tag","part_of_speach","match","ipa_pron","sort","a","b","word","localeCompare","useSearch","useState","list","setList","fetchData","useCallback","str","useEffect","InputWrapper","search","Input","input","Checkbox","Label","label","SearchBlock","setWords","filterStarredWords","searchText","setSearchText","adjective","verb","noun","filters","setFilters","savedText","localStorage","getItem","savedFilters","JSON","parse","setItem","stringify","filtersHandler","event","obj","target","id","value","onChange","e","Object","keys","checked","type","htmlFor","props","dragging","Btn","span","Part","Desc","ShortInfo","Burger","Info","Word","addToStarred","removeFromStarred","starred","onDragOver","setDragging","showInfo","setShowInfo","draggable","onDragStart","onDragEnd","onDragEnter","length","stopPropagation","starFull","width","height","idx","WordsList","words","starredWords","filtredStarredWords","setStarredWords","overItem","console","log","draggingIndex","findIndex","overIndex","result","tmp","some","useStarred","arr","filter","Content","Title","p","App","setFiltredStarredWords","activeFilters","key","startsWith","includes","saved","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bfec580.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/star_white.dddeb565.svg\";","export default __webpack_public_path__ + \"static/media/star_white_empty.1e66b125.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport star from '../assets/images/star_white.svg';\r\nimport starEmpty from '../assets/images/star_white_empty.svg';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: var(--main);\r\n  color: #fff;\r\n  width: 100%;\r\n  padding: 20px 30px;\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ToStarredWords = styled.button`\r\n  font-size: inherit;\r\n  color: inherit;\r\n  font-weight: inherit;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    text-shadow: 0 0 2px #fff;\r\n    img {\r\n      filter: drop-shadow(0 0 2px #fff);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Star = styled.img`\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Header = ({ setStarMod, starMod }) => {\r\n  return (\r\n    <Wrapper className='border-radius'>\r\n      Word Keeper\r\n      <ToStarredWords onClick={() => setStarMod(!starMod)}>\r\n        <Star src={starMod ? star : starEmpty} alt='' />\r\n        Starred Words\r\n      </ToStarredWords>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/search.d95a3156.svg\";","const axios = require('axios');\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://api.datamuse.com'\r\n});\r\n\r\nconst partsOfSpeach = {\r\n  n: 'noun',\r\n  v: 'verb',\r\n  adj: 'adjective',\r\n  adv: 'adverb'\r\n};\r\n\r\nexport const oxfordAPI = {\r\n  async search(text) {\r\n    const res = await instance.get(`/words?max=10&md=d,p,r&ipa=1&sp=${text}*`);\r\n\r\n    return res.data\r\n      .map(item => {\r\n        return {\r\n          ...item,\r\n          defs: item.defs ? item.defs.map(i => i.replace(/^.+\\t/g, '')) : [],\r\n          tags: item.tags.reduce(\r\n            (acc, tag) => {\r\n              if (partsOfSpeach[tag] && partsOfSpeach[tag] !== 'noun') {\r\n                acc.part_of_speach = partsOfSpeach[tag];\r\n              }\r\n              if (tag.match(/ipa_pron/)) {\r\n                acc.ipa_pron = `[ ${tag.replace(/ipa_pron:/, '')} ]`;\r\n              }\r\n              return acc;\r\n            },\r\n            { part_of_speach: 'noun' }\r\n          )\r\n        };\r\n      })\r\n      .sort((a, b) => a.word.localeCompare(b.word));\r\n  }\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { oxfordAPI } from '../api.js';\r\n\r\nconst useSearch = text => {\r\n  const [list, setList] = useState([]);\r\n\r\n  const fetchData = useCallback(async str => {\r\n    const res = await oxfordAPI.search(str);\r\n    setList(res);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      fetchData(text);\r\n    } else {\r\n      setList([]);\r\n    }\r\n  }, [text, fetchData]);\r\n\r\n  return { list };\r\n};\r\n\r\nexport default useSearch;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport search from '../assets/images/search.svg';\r\nimport useSearch from '../hooks/useSearch';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 15px;\r\n  background-color: #efefef;\r\n  width: 25%;\r\n  min-width: 25%;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 15px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 32px;\r\n    height: 32px;\r\n    right: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background: url(${search}) no-repeat;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border-radius: 3px;\r\n  border: 1px solid var(--main);\r\n  padding: 15px;\r\n  outline: none;\r\n  width: 100%;\r\n  font-weight: bold;\r\n  padding-right: 50px;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 2px var(--main);\r\n  }\r\n`;\r\n\r\nconst Checkbox = styled.div`\r\n  margin-bottom: 10px;\r\n\r\n  input {\r\n    display: none;\r\n\r\n    &:checked + label::before {\r\n      background-color: var(--main);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  cursor: pointer;\r\n  position: relative;\r\n  padding-left: 30px;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nconst SearchBlock = ({ setWords, starMod, filterStarredWords }) => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const { list } = useSearch(searchText);\r\n  const [filters, setFilters] = useState({ adjective: false, verb: false, noun: false });\r\n\r\n  useEffect(() => {\r\n    const savedText = localStorage.getItem('searchText');\r\n    savedText && setSearchText(savedText);\r\n    const savedFilters = JSON.parse(localStorage.getItem('filters'));\r\n    savedFilters && setFilters(savedFilters);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setWords(list);\r\n  }, [list, setWords]);\r\n\r\n  useEffect(() => {\r\n    if (starMod) {\r\n      filterStarredWords(searchText, filters);\r\n    }\r\n    localStorage.setItem('searchText', searchText);\r\n    localStorage.setItem('filters', JSON.stringify(filters));\r\n  }, [searchText, filterStarredWords, starMod, filters]);\r\n\r\n  const filtersHandler = event => {\r\n    setFilters(obj => ({ ...obj, [event.target.id]: !filters[event.target.id] }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper className='border-radius'>\r\n      <InputWrapper>\r\n        <Input value={searchText} onChange={e => setSearchText(e.target.value)} />\r\n      </InputWrapper>\r\n      {starMod &&\r\n        Object.keys(filters).map(item => {\r\n          return (\r\n            <Checkbox key={item}>\r\n              <input checked={filters[item]} onChange={filtersHandler} type='checkbox' id={item} />\r\n              <Label htmlFor={item}>{item}</Label>\r\n            </Checkbox>\r\n          );\r\n        })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchBlock;\r\n","export default __webpack_public_path__ + \"static/media/star_empty.e1554bd5.svg\";","export default __webpack_public_path__ + \"static/media/star_full.195e88a1.svg\";","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport starEmpty from '../assets/images/star_empty.svg';\r\nimport starFull from '../assets/images/star_full.svg';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #fff;\r\n  padding: 8px 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 3px;\r\n\r\n  opacity: ${props => (props.dragging ? 0.2 : 1)};\r\n  box-shadow: ${props => (props.dragging ? 'inset 0 0 0 2px #000' : 'none')};\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin-left: auto;\r\n  img {\r\n    display: block;\r\n  }\r\n\r\n  &:hover {\r\n    filter: drop-shadow(0 0 2px var(--main));\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-weight: bold;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Part = styled.span`\r\n  font-style: italic;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Desc = styled.span`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst ShortInfo = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Burger = styled.span`\r\n  margin-right: 20px;\r\n  min-width: 30px;\r\n  height: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  span {\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: #000;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n\r\n  * {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Word = ({ item, addToStarred, removeFromStarred, starred, starMod, onDragOver, dragging, setDragging }) => {\r\n  const { word, defs, tags } = item;\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  const starWordHandler = event => {\r\n    event.stopPropagation();\r\n    starred ? removeFromStarred(item) : addToStarred(item);\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      draggable={starMod}\r\n      onDragStart={() => setDragging(word)}\r\n      onDragEnd={() => setDragging(null)}\r\n      dragging={dragging === word}\r\n      onDragEnter={() => onDragOver(word)}>\r\n      <ShortInfo onClick={() => setShowInfo(!showInfo)}>\r\n        {starMod && (\r\n          <Burger>\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </Burger>\r\n        )}\r\n        <Label>{word}</Label>\r\n        <Part>{tags.part_of_speach}</Part>\r\n        {!!defs.length && !showInfo && <Desc>{defs[0]}</Desc>}\r\n        <Btn onClick={starWordHandler}>\r\n          <img src={starred ? starFull : starEmpty} width='30' height='30' alt='' />\r\n        </Btn>\r\n      </ShortInfo>\r\n      {showInfo && (\r\n        <Info>\r\n          <b>Pronunciation</b>: <span>{tags.ipa_pron}</span>\r\n          {!!defs.length && (\r\n            <div>\r\n              <p>\r\n                <b>Definitions:</b>\r\n              </p>\r\n              <ul>\r\n                {defs.map((item, idx) => (\r\n                  <li key={idx}>{item}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Info>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Word from './Word';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst WordsList = ({\r\n  words,\r\n  removeFromStarred,\r\n  addToStarred,\r\n  starredWords,\r\n  filtredStarredWords,\r\n  starMod,\r\n  setStarredWords\r\n}) => {\r\n  const list = starMod ? filtredStarredWords : words;\r\n  const [dragging, setDragging] = useState(null);\r\n\r\n  const onDragOver = overItem => {\r\n    if (dragging !== overItem) {\r\n      console.log(overItem);\r\n      const draggingIndex = starredWords.findIndex(item => item.word === dragging);\r\n      const overIndex = starredWords.findIndex(item => item.word === overItem);\r\n      const result = [...starredWords];\r\n      const tmp = result[draggingIndex];\r\n      result[draggingIndex] = result[overIndex];\r\n      result[overIndex] = tmp;\r\n\r\n      setStarredWords(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {list.map(item => {\r\n        return (\r\n          <Word\r\n            item={item}\r\n            key={item.word}\r\n            starred={starredWords.some(starred => starred.word === item.word)}\r\n            addToStarred={addToStarred}\r\n            removeFromStarred={removeFromStarred}\r\n            starMod={starMod}\r\n            onDragOver={onDragOver}\r\n            dragging={dragging}\r\n            setDragging={setDragging}\r\n          />\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WordsList;\r\n","import { useState } from 'react';\r\n\r\nconst useStarred = text => {\r\n  const [starredWords, setStarredWords] = useState([]);\r\n\r\n  const addToStarred = word => {\r\n    setStarredWords(arr => [...arr, word]);\r\n  };\r\n\r\n  const removeFromStarred = word => {\r\n    setStarredWords(arr => arr.filter(item => item.word !== word.word));\r\n  };\r\n\r\n  return { starredWords, addToStarred, removeFromStarred, setStarredWords };\r\n};\r\n\r\nexport default useStarred;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from './components/Header';\r\nimport SearchBlock from './components/SearchBlock';\r\nimport WordsList from './components/WordsList';\r\nimport useStarred from './hooks/useStarred';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 1000px;\r\n  background-color: #f8f5f5;\r\n  padding: 10px;\r\n  margin-top: 200px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  min-height: 150px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 30px;\r\n  margin-left: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst App = () => {\r\n  const [words, setWords] = useState([]);\r\n  const [starMod, setStarMod] = useState(false);\r\n  const { starredWords, addToStarred, removeFromStarred, setStarredWords } = useStarred();\r\n  const [filtredStarredWords, setFiltredStarredWords] = useState(starredWords);\r\n\r\n  const filterStarredWords = useCallback(\r\n    (text, filters) => {\r\n      const activeFilters = Object.keys(filters).filter(key => filters[key]);\r\n      setFiltredStarredWords(\r\n        starredWords.filter(item => {\r\n          const match = item.word.startsWith(text),\r\n            withFilter = activeFilters.length ? activeFilters.includes(item.tags.part_of_speach) : true;\r\n          return withFilter && match;\r\n        })\r\n      );\r\n    },\r\n    [starredWords]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('starredWords'));\r\n    saved?.length && setStarredWords(saved);\r\n  }, [setStarredWords]);\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('starMod'));\r\n    saved && setStarMod(saved);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('starredWords', JSON.stringify(starredWords));\r\n  }, [starredWords]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('starMod', JSON.stringify(starMod));\r\n  }, [starMod]);\r\n\r\n  return (\r\n    <Wrapper className='border-radius'>\r\n      <Header setStarMod={setStarMod} starMod={starMod} />\r\n      {starMod && <Title>Starred Words</Title>}\r\n      <Content>\r\n        <SearchBlock setWords={setWords} starMod={starMod} filterStarredWords={filterStarredWords} />\r\n        <WordsList\r\n          words={words}\r\n          addToStarred={addToStarred}\r\n          starredWords={starredWords}\r\n          filtredStarredWords={filtredStarredWords}\r\n          removeFromStarred={removeFromStarred}\r\n          starMod={starMod}\r\n          setStarredWords={setStarredWords}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}